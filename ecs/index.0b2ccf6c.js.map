{"mappings":"qfACA,MAAMA,EAAO,IAAIC,EAAAC,OAAS,CACtBC,MAAO,IACPC,OAAQ,YAINC,UAAwBJ,EAAAK,sBAEPC,GACfC,aADeD,OAAAA,OADHE,KAAI,gBAMlBC,UAAqBT,EAAAU,OAahBC,OAAOC,EAAuBC,OAC5B,IAAIC,KAAUF,EAAU,CACzB,MAAMG,EAASD,EAAOE,IAAIZ,GAAkBE,OAEtCW,EAAYH,EAAOE,IAAIhB,EAAAkB,oBAGvBC,EADYJ,EAAOK,IAAIH,EAAUI,KACdC,YAAYC,MAAKC,KAAMC,cAGhDR,EAAUI,IAAMJ,EAAUI,IAAIK,IAAIP,EAAOI,MAAMV,EAAQ,0CArB/Cc,MAAK,+BAIdC,SAAW,QAGXC,WAAa7B,EAAA8B,WAAcC,YAE1BN,aAAe,KAiB3B,MAAMO,EAAQ,IAAIhC,EAAAiC,MAClBD,EAAME,MAAMR,IAAI,IAAIjB,GAGpB,MAAM0B,EAAQ,IAAInC,EAAAoC,MAAQ,CACtBf,IAAKrB,EAAAqC,IAAO,IAAK,KACjBnC,MAAO,GACPC,OAAQ,GACRmC,MAAOtC,EAAAuC,MAASC,MAEpBL,EAAMM,aAAa,IAAIrC,EAAgBJ,EAAAqC,IAAO,IAAK,OAGnDtC,EAAK2C,SAAQ,OAASV,GACtBjC,EAAK4C,QAAQC,MAAI,KACb7C,EAAK8C,aAAanB,IAAIS","sources":["src/ecs/main.ts"],"sourcesContent":["import * as ex from 'excalibur';\nconst game = new ex.Engine({\n    width: 600,\n    height: 400\n});\n\n// start-snippet{ecs}\nclass SearchComponent extends ex.Component<'search'> {\n    public readonly type = 'search'\n    constructor(public target: ex.Vector) {\n        super();\n    }\n}\n\nclass SearchSystem extends ex.System<ex.TransformComponent | SearchComponent> {\n    // Types need to be listed as a const literal\n    public readonly types = ['ex.transform', 'search'] as const;\n\n    // Lower numbers mean higher priority\n    // 99 is low priority\n    public priority = 99;\n\n    // Run this system in the \"update\" phase\n    public systemType = ex.SystemType.Update\n\n    private _searchSpeed = 100 // pixels/sec\n\n    public update(entities: ex.Entity[], delta: number) {\n        for (let entity of entities) {\n            const target = entity.get(SearchComponent)!.target;\n            // ex.TransformComponent is a built in type\n            const transform = entity.get(ex.TransformComponent) as ex.TransformComponent;\n\n            const direction = target.sub(transform.pos);\n            const motion = direction.normalize().scale(this._searchSpeed);\n\n            // Moves these entities towards the target at 10 pixels per second\n            transform.pos = transform.pos.add(motion.scale(delta / 1000))\n        }\n    }\n}\n\nconst scene = new ex.Scene();\nscene.world.add(new SearchSystem());\n\n// Actors come with batteries included built in features\nconst actor = new ex.Actor({\n    pos: ex.vec(100, 100),\n    width: 30,\n    height: 30,\n    color: ex.Color.Red\n});\nactor.addComponent(new SearchComponent(ex.vec(600, 400)));\n// end-snippet{ecs}\n\ngame.addScene('root', scene);\ngame.start().then(() => {\n    game.currentScene.add(actor);\n});\n\n"],"names":["$32e03f1bd3f8f35e$var$game","$7gJFe","Engine","width","height","$32e03f1bd3f8f35e$var$SearchComponent","Component","target","super","type","$32e03f1bd3f8f35e$var$SearchSystem","System","update","entities","delta","entity","target1","get","transform","TransformComponent","motion","sub","pos","normalize","scale","this","_searchSpeed","add","types","priority","systemType","SystemType","Update","$32e03f1bd3f8f35e$var$scene","Scene","world","$32e03f1bd3f8f35e$var$actor","Actor","vec","color","Color","Red","addComponent","addScene","start","then","currentScene"],"version":3,"file":"index.0b2ccf6c.js.map"}