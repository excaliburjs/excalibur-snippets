{"mappings":"qfACA,MAAMA,EAAO,IAAIC,EAAAC,OAAU,CACvBC,MAAO,IACPC,OAAQ,YAINC,UAAwBJ,EAAAK,sBAEPC,GACfC,aADeD,OAAAA,EAFvBE,KACoBC,KAAO,gBAMrBC,UAAqBV,EAAAW,OAahBC,OAAOC,EAAuBC,GACjC,IAAK,IAAIC,KAAUF,EAAU,CACzB,MAAMP,EAASS,EAAOC,IAAIZ,GAAkBE,OAEtCW,EAAYF,EAAOC,IAAIhB,EAAAkB,oBAGvBC,EADYb,EAAOc,IAAIH,EAAUI,KACdC,YAAYC,MAAMf,KAAKgB,cAGhDP,EAAUI,IAAMJ,EAAUI,IAAII,IAAIN,EAAOI,MAAMT,EAAQ,qCAvBnEN,KAEoBkB,MAAQ,CAAC,eAAgB,UAF7ClB,KAMWmB,SAAW,GANtBnB,KASWoB,WAAa5B,EAAA6B,WAAcC,OATtCtB,KAWYgB,aAAe,KAiB3B,MAAMO,EAAQ,IAAI/B,EAAAgC,MAClBD,EAAME,MAAMR,IAAI,IAAIf,GAGpB,MAAMwB,EAAQ,IAAIlC,EAAAmC,MAAS,CACvBd,IAAKrB,EAAAoC,IAAO,IAAK,KACjBlC,MAAO,GACPC,OAAQ,GACRkC,MAAOrC,EAAAsC,MAASC,MAEpBL,EAAMM,aAAa,IAAIpC,EAAgBJ,EAAAoC,IAAO,IAAK,OAGnDrC,EAAK0C,SAAS,OAAQV,GACtBhC,EAAK2C,QAAQC,MAAI,KACb5C,EAAK6C,aAAanB,IAAIS","sources":["src/ecs/main.ts"],"sourcesContent":["import * as ex from 'excalibur';\nconst game = new ex.Engine({\n    width: 600,\n    height: 400\n});\n\n// start-snippet{ecs}\nclass SearchComponent extends ex.Component<'search'> {\n    public readonly type = 'search'\n    constructor(public target: ex.Vector) {\n        super();\n    }\n}\n\nclass SearchSystem extends ex.System<ex.TransformComponent | SearchComponent> {\n    // Types need to be listed as a const literal\n    public readonly types = ['ex.transform', 'search'] as const;\n\n    // Lower numbers mean higher priority\n    // 99 is low priority\n    public priority = 99;\n\n    // Run this system in the \"update\" phase\n    public systemType = ex.SystemType.Update\n\n    private _searchSpeed = 100 // pixels/sec\n\n    public update(entities: ex.Entity[], delta: number) {\n        for (let entity of entities) {\n            const target = entity.get(SearchComponent)!.target;\n            // ex.TransformComponent is a built in type\n            const transform = entity.get(ex.TransformComponent) as ex.TransformComponent;\n\n            const direction = target.sub(transform.pos);\n            const motion = direction.normalize().scale(this._searchSpeed);\n\n            // Moves these entities towards the target at 10 pixels per second\n            transform.pos = transform.pos.add(motion.scale(delta / 1000))\n        }\n    }\n}\n\nconst scene = new ex.Scene();\nscene.world.add(new SearchSystem());\n\n// Actors come with batteries included built in features\nconst actor = new ex.Actor({\n    pos: ex.vec(100, 100),\n    width: 30,\n    height: 30,\n    color: ex.Color.Red\n});\nactor.addComponent(new SearchComponent(ex.vec(600, 400)));\n// end-snippet{ecs}\n\ngame.addScene('root', scene);\ngame.start().then(() => {\n    game.currentScene.add(actor);\n});\n\n"],"names":["$0fba28b57a3f415a$var$game","$9ccMz","Engine","width","height","$0fba28b57a3f415a$var$SearchComponent","Component","target","super","this","type","$0fba28b57a3f415a$var$SearchSystem","System","update","entities","delta","entity","get","transform","TransformComponent","motion","sub","pos","normalize","scale","_searchSpeed","add","types","priority","systemType","SystemType","Update","$0fba28b57a3f415a$var$scene","Scene","world","$0fba28b57a3f415a$var$actor","Actor","vec","color","Color","Red","addComponent","addScene","start","then","currentScene"],"version":3,"file":"index.7f0f709c.js.map"}