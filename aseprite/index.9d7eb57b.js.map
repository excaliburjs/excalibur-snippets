{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-6e79da3a1fae7507.js","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/webpack/universalModuleDefinition","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/src/AsepriteRaw.ts","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/src/AsepriteResource.ts","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/src/AsepriteSpriteSheet.ts","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/src/index.ts","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/external umd {\"commonjs\":\"excalibur\",\"commonjs2\":\"excalibur\",\"amd\":\"excalibur\",\"root\":\"ex\"}","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/webpack/bootstrap","node_modules/@excaliburjs/plugin-aseprite/dist/webpack:/ex.Plugin.Aseprite/webpack/startup","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-01b0069fde175622.js","node_modules/@parcel/runtime-js/lib/runtime-3e3f9d0b094ad20d.js","src/aseprite/main.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5Ihew\\\":\\\"index.9d7eb57b.js\\\",\\\"8YTcb\\\":\\\"beetle.956ebb15.json\\\",\\\"1YvhR\\\":\\\"beetle.fc54f341.png\\\",\\\"cglW7\\\":\\\"index.45450c7a.js\\\"}\"));","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"excalibur\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"excalibur\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ex\"] = factory(require(\"excalibur\"));\n\telse\n\t\troot[\"ex\"] = root[\"ex\"] || {}, root[\"ex\"][\"Plugin\"] = root[\"ex\"][\"Plugin\"] || {}, root[\"ex\"][\"Plugin\"][\"Aseprite\"] = factory(root[\"ex\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__205__) {\nreturn ","export class AsepriteRaw {\r\n    frames!: {\r\n        [key: string]: { \r\n            frame: { x: number, y: number, w: number, h: number },\r\n            rotated: boolean,\r\n            trimmed: boolean,\r\n            spriteSourceSize: { x: number, y: number, w: number, h: number },\r\n            sourceSize: { w: number, h: number },\r\n            duration: number\r\n        }\r\n    }\r\n    meta!: {\r\n        image: string,\r\n        size: { w: number, h: number },\r\n        scale: number,\r\n        format: string,\r\n        layers: { name: string, opacity: number, blendMode: string }[],\r\n        frameTags: { name: string, from: number, to: number, direction: string}[],\r\n        slices: any[]\r\n    }\r\n}","import { ImageSource, Loadable, Logger, Resource, SpriteSheet } from 'excalibur';\r\nimport { AsepriteRaw } from './AsepriteRaw';\r\nimport { AsepriteSpriteSheet } from './AsepriteSpriteSheet';\r\n\r\n\r\nexport class AsepriteResource implements Loadable<AsepriteSpriteSheet> {\r\n    private _resource: Resource<AsepriteRaw>;\r\n    public data!: AsepriteSpriteSheet;\r\n    public rawAseprite!: AsepriteRaw;\r\n    public image!: ImageSource;\r\n\r\n    public convertPath: (originPath: string, relativePath: string) => string;\r\n    constructor(path: string, public bustCache = false) {\r\n        this._resource = new Resource(path, 'json', bustCache);\r\n        this.convertPath = (originPath: string, relativePath: string) => {\r\n            // Use absolute path if specified\r\n            if (relativePath.indexOf('/') === 0) {\r\n                return relativePath;\r\n            }\r\n\r\n            const originSplit = originPath.split('/');\r\n            const relativeSplit = relativePath.split('/');\r\n            // if origin path is a file, remove it so it's a directory\r\n            if (originSplit[originSplit.length - 1].includes('.')) {\r\n                originSplit.pop();\r\n            }\r\n            return originSplit.concat(relativeSplit).join('/');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public async load(): Promise<AsepriteSpriteSheet> {\r\n        const asepriteData = await this._resource.load();\r\n        const imagepath = this.convertPath(this._resource.path, asepriteData.meta.image);\r\n        const spriteSheetImage = new ImageSource(imagepath, this.bustCache);\r\n        await spriteSheetImage.load();\r\n        this.rawAseprite = asepriteData;\r\n        this.image = spriteSheetImage;\r\n        return this.data = new AsepriteSpriteSheet(asepriteData, spriteSheetImage);\r\n    }\r\n\r\n    public getSpriteSheet() {\r\n        if (this.isLoaded()) {\r\n            return this.data.getSpriteSheet();\r\n        } else {\r\n            Logger.getInstance().warn('AspriteResource must be loaded before .getSpriteSheet() is called');\r\n        }\r\n    }\r\n\r\n    public getAnimation(name: string) {\r\n        if (this.isLoaded()) {\r\n            return this.data.getAnimation(name);\r\n        } else {\r\n            Logger.getInstance().warn('AspriteResource must be loaded before .getAnimation() is called');\r\n        }\r\n    }\r\n\r\n\r\n    isLoaded(): boolean {\r\n        return !!this.data;\r\n    }\r\n}","import { Frame, ImageSource, range, Sprite, SpriteSheet, Animation, AnimationStrategy } from \"excalibur\";\r\nimport { AsepriteRaw } from \"./AsepriteRaw\";\r\n\r\n\r\nexport class AsepriteSpriteSheet {\r\n    private _spriteSheet: SpriteSheet;\r\n    private _animations = new Map<string, Animation>()\r\n    constructor(public asepriteRaw: AsepriteRaw, public image: ImageSource) {\r\n        for (let frameTag of asepriteRaw.meta.frameTags) {\r\n            let from = frameTag.from;\r\n            let to = frameTag.to;\r\n            let frameIndices = range(from, to);\r\n            let frames: Frame[] = Object.values(asepriteRaw.frames)\r\n            .filter((_, id) => {\r\n                return frameIndices.includes(id);\r\n            })\r\n            .map(frame => ({\r\n                duration: frame.duration,\r\n                graphic: new Sprite({\r\n                    image,\r\n                    sourceView: {\r\n                        x: frame.frame.x,\r\n                        y: frame.frame.y,\r\n                        width: frame.frame.w,\r\n                        height: frame.frame.h\r\n                    },\r\n                    destSize: {\r\n                        width: frame.frame.w,\r\n                        height: frame.frame.h\r\n                    }\r\n                })\r\n            }));\r\n            let strategy = AnimationStrategy.Loop;\r\n            switch(frameTag.direction) {\r\n                case \"pingpong\": {\r\n                    strategy = AnimationStrategy.PingPong\r\n                    break;\r\n                }\r\n                case \"reverse\": {\r\n                    frames.reverse();\r\n                    break;\r\n                }\r\n            }\r\n            this._animations.set(frameTag.name, new Animation({frames, strategy}));\r\n        }\r\n\r\n        const sprites: Sprite[] = [];\r\n        for (let sprite of Object.values(asepriteRaw.frames)) {\r\n            sprites.push(new Sprite({\r\n                image,\r\n                sourceView: {\r\n                    x: sprite.frame.x,\r\n                    y: sprite.frame.y,\r\n                    width: sprite.frame.w,\r\n                    height: sprite.frame.h\r\n                }\r\n            }));\r\n        }\r\n        this._spriteSheet = new SpriteSheet({\r\n            sprites,\r\n            rows: asepriteRaw.meta.size.h / sprites[0].height,\r\n            columns: asepriteRaw.meta.size.w / sprites[0].width\r\n        });\r\n    }\r\n\r\n    getSpriteSheet(): SpriteSheet {\r\n        return this._spriteSheet\r\n    }\r\n\r\n    getAnimation(name: string): Animation {\r\n        if (!this._animations.has(name)) {\r\n            throw new Error(`No animation exists with name ${name}, check your exported Aseprite file`);\r\n        }\r\n        return this._animations.get(name) as Animation;\r\n    }\r\n}","\r\nexport * from './AsepriteRaw';\r\nexport * from './AsepriteResource';\r\nexport * from './AsepriteSpriteSheet';","module.exports = __WEBPACK_EXTERNAL_MODULE__205__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('5Ihew') + \"../\" + require('./helpers/bundle-manifest').resolve(\"8YTcb\");","module.exports = require('./helpers/bundle-url').getBundleURL('5Ihew') + \"../\" + require('./helpers/bundle-manifest').resolve(\"1YvhR\");","import * as ex from 'excalibur';\nimport * as aseprite from '@excaliburjs/plugin-aseprite';\nimport beetlejson from './beetle.json';\nimport beetlepng from './beetle.png';\n\n// start-snippet{aseprite}\nconst game = new ex.Engine({\n    width: 600,\n    height: 400,\n    displayMode: ex.DisplayMode.FitScreen\n});\n\nconst asepriteSheet = new aseprite.AsepriteResource(beetlejson);\n// hack for parcel v2 asset paths\n// not needed in webpack\nasepriteSheet.convertPath = (originPath, relativePath) => {\n    // convertPath allows you to change how excalibur locates the resource\n    return beetlepng;\n}\n\nconst loader = new ex.Loader([asepriteSheet]);\ngame.start(loader).then(() => {\n    const actor = new ex.Actor({pos: game.screen.center });\n    actor.graphics.use(asepriteSheet.getAnimation('Loop') as ex.Animation)\n\n    game.currentScene.add(actor);\n});\n\n// end-snippet{aseprite}"],"names":["$5b2b3cdd5d136d36$export$40339995e8a21591","$5b2b3cdd5d136d36$export$357eb1b4f03c1402","$5b2b3cdd5d136d36$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","root","factory","self","__WEBPACK_EXTERNAL_MODULE__205__","t1","AsepriteRaw","n","o","AsepriteResource","path","bustCache","_resource","Resource","convertPath","originPath","relativePath","indexOf","originSplit","split","relativeSplit","includes","pop","concat","join","load","asepriteData","imagepath","meta","image","spriteSheetImage","ImageSource","rawAseprite","data","AsepriteSpriteSheet","getSpriteSheet","this","isLoaded","Logger","getInstance","warn","getAnimation","name","r","asepriteRaw","_animations","Map","frameTag","frameTags","from","to","frameIndices","range","frames","values","filter","_","map","frame","duration","graphic","Sprite","sourceView","x","y","width","w","height","h","destSize","strategy","AnimationStrategy","Loop","direction","PingPong","reverse","set","Animation","sprites","sprite","push","_spriteSheet","SpriteSheet","rows","size","columns","has","get","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","require","define","amd","ex","Plugin","Aseprite","$f3d8ccfa2247eb90$export$da289beea9c5b10d","$f3d8ccfa2247eb90$var$bundleURL","$f3d8ccfa2247eb90$var$getBaseURL","url","replace","value","err","matches","stack","match","$f3d8ccfa2247eb90$var$getBundleURL","$fb78b8ea297692db$exports","getBundleURL","resolve","$bc0890d289536acc$exports","$d3798b4acf648c14$var$game","$7gJFe","Engine","displayMode","DisplayMode","FitScreen","$d3798b4acf648c14$var$asepriteSheet","$21f9ef4914ade931$exports","$parcel$interopDefault","$d3798b4acf648c14$var$loader","Loader","start","then","actor","Actor","pos","screen","center","graphics","use","currentScene","add"],"version":3,"file":"index.9d7eb57b.js.map"}